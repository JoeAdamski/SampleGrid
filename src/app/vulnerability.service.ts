import { Injectable } from '@angular/core';

import { Vulnerability, SeverityEnum } from './model/vulnerability.model';


@Injectable()
export class VulnerabilityService {
  vulnerabilities:Vulnerability[] = [];

  constructor() {
    this.initializeSampleData();
  }

  getVulnerabilities():Vulnerability[] {
    return this.vulnerabilities;
  }


  private initializeSampleData() {

    // Create sample data set with some hard coded data temporarily.
    this.vulnerabilities.push(
      new Vulnerability(
        SeverityEnum.very,
        'OS Command Injection',
        78,
        '\\FlawedApp\\src\\flawedFolder',
        'Flawed.java',
        36
      )
    );

    this.vulnerabilities.push(
      new Vulnerability(
        SeverityEnum.high,
        'SQL Injection',
        89,
        '\\FlawedApp\\src\\flawedFolder',
        'Flawed.java',
        31
      )
    );
    this.vulnerabilities.push(
      new Vulnerability(
        SeverityEnum.med,
        'Use of Hard-coded Password',
        259,
        '\\FlawedApp\\src\\flawedFolder',
        'Flawed.java1',
        1
      )
    );
    this.vulnerabilities.push(
      new Vulnerability(
        SeverityEnum.med,
        'Use of Hard-coded Password',
        259,
        '\\FlawedApp\\src\\flawedFolder2',
        'Flawed2.java',
        40
      )
    );

    this.vulnerabilities.push(
      new Vulnerability(
        SeverityEnum.med,
        'Insufficient Entropy',
        331,
        '\\FlawedApp\\src\\flawedFolder2',
        'Flawed2.java',
        46
      )
    );

    this.vulnerabilities.push(
      new Vulnerability(
        SeverityEnum.med,
        'Inadequate Encryption Strength',
        331,
        '\\FlawedApp\\src\\flawedFolder3',
        'Flawed2.java',
        51
      )
    );

    this.vulnerabilities.push(
      new Vulnerability(
        SeverityEnum.low,
        'Improper Resource Shutdown or Release',
        404,
        '\\FlawedApp\\src\\flawedFolder3',
        'Flawed3.java',
        25
      )
    );
  }

}
